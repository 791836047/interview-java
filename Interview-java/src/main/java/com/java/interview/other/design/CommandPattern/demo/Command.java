package com.java.interview.other.design.CommandPattern.demo;

/**
 * 定义命令操作

 * 命令模式是一种行为型设计模式，它允许将请求封装成对象，从而使您能够将不同的请求、队列或日志参数化其他对象，并支持可撤销操作。
 * 在Java中，命令模式的实现通常涉及以下角色：抽象命令、具体命令、接收者和调用者。
 *
 * 下面是一个实际应用场景例子：假设您正在开发一个复杂的文本编辑器，该编辑器需要支持多种操作，
 * 例如撤销、重做、剪切、复制和粘贴等。如果您使用if-else语句来处理这些操作，代码会变得混乱且难以维护。
 * 相反，您可以使用命令模式将每个操作封装成一个具体命令对象，并将这些对象传递给调用者。调用者可以使用这些对象来执行请求，并且可以轻松地添加新的命令对象以支持更多操作。
 * @author liaowenhui
 * @date 2023/10/30 15:19
 */
public interface Command {
    void execute();
    void undo();
}
